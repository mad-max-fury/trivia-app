{"version":3,"sources":["redux/action.js","components/configLayout.js","fetch/fetch.js","layoutPages/ConfigDifficulty.js","layoutPages/QuestionsLayout.js","layoutPages/ResultLayout.js","layoutPages/Performance.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["handleCategory","payload","type","handlenOQ","handleScore","ConfigLayout","opts","label","dispatch","useDispatch","useState","value","setValue","handleChange","target","toLowerCase","Number","className","htmlFor","id","min","max","onChange","placeholder","map","options","i","name","Fetch","url","response","setResponse","error","setError","loading","setLoading","axios","defaults","baseURL","useEffect","get","then","res","data","catch","err","finally","ConfigDifficulty","fetch","history","useHistory","onSubmit","ev","preventDefault","push","trivia_categories","to","QuestionsLayout","useSelector","state","category","level","nOQ","score","Questions","apiUrl","concat","questionindex","setQuestionindex","answers","setAnswers","results","length","question","incorrect_answers","splice","Math","floor","random","correct_answer","handleAnswerClick","console","log","textContent","decode","answer","onClick","ResultLayout","toUpperCase","toFixed","Performance","App","path","exact","init","reducer","action","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.98f71d6a.chunk.js","sourcesContent":["const CHANGE_CATEGORY = 'CHANGE_CATEGORY'\r\nconst CHANGE_NOQ = 'CHANGE_NOQ'\r\nconst CHANGE_LEVEL = \"CHANGE_LEVEL\"\r\nconst CHANGE_SCORE = \"CHANGE_SCORE\"\r\nconst UPDATE_QUESTIONS = \"UPDATE_QUESTIONS\"\r\n\r\nexport const handleCategory = (payload) => {\r\n  return {\r\n    type: CHANGE_CATEGORY,\r\n    payload\r\n  }\r\n\r\n}\r\nexport const handlenOQ = (payload) => {\r\n  return {\r\n    type: CHANGE_NOQ,\r\n    payload\r\n  }\r\n\r\n}\r\nexport const handleLevel = (payload) => {\r\n  return {\r\n    type: CHANGE_LEVEL,\r\n    payload\r\n  }\r\n\r\n}\r\nexport const handleScore = (payload) => {\r\n  return {\r\n    type: CHANGE_SCORE,\r\n    payload\r\n  }\r\n\r\n}\r\nexport const handleQuestionUpdate = (payload) => {\r\n  return {\r\n    type: UPDATE_QUESTIONS,\r\n    payload\r\n  }\r\n\r\n}","import React, { useState } from 'react'\r\nimport './ConfigLayout.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleCategory, handleLevel, handlenOQ } from '../redux/action';\r\nconst ConfigLayout = ({ opts, label, type }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setValue(target.value)\r\n    switch (label) {\r\n      case \"category\":\r\n        dispatch(handleCategory(target.value))\r\n        break\r\n      case \"level\":\r\n        dispatch(handleLevel(target.value.toLowerCase()))\r\n        break\r\n      default:\r\n        dispatch(handlenOQ(Number(target.value)))\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  return (type === \"number\" ? <div className=\"wrapperInput\">\r\n    <label htmlFor='nOQ'>No of questions :</label>\r\n    <input type='number' id='nOQ' min='5' max='10' onChange={handleChange} placeholder='20' />\r\n  </div> : <div className='wrapperInput'>\r\n    <label htmlFor='sLB'>{label} :</label>\r\n    <select value={value} label={label} id=\"sLB\" onChange={handleChange}>\r\n      {opts.map((options, i) => {\r\n        return <option value={options.id} key={i}>{options.name}</option>;\r\n      })}\r\n    </select>\r\n  </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ConfigLayout\r\n","import { useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst Fetch = ({ url }) => {\r\n  const [response, setResponse] = useState(null)\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  axios.defaults.baseURL = 'https://opentdb.com/'\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .get(url)\r\n        .then(res => setResponse(res.data))\r\n        .catch(err => {\r\n          setError(err)\r\n        })\r\n        .finally(() => setLoading(false))\r\n    }\r\n    fetchData()\r\n\r\n  }, [url])\r\n\r\n  return {\r\n    response,\r\n    error,\r\n    loading\r\n  }\r\n}\r\n\r\nexport default Fetch\r\n","\r\nimport ConfigLayout from \"../components/configLayout\"\r\nimport './ConfigDifficulty.css'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport fetch from \"../fetch/fetch\"\r\n\r\n\r\n\r\n\r\nconst ConfigDifficulty = () => {\r\n  const { response, error, loading } = fetch({ url: '/api_category.php' })\r\n  const history = useHistory()\r\n  // console.log(response, error, loading)\r\n  if (loading) {\r\n    return <form>\r\n      loading...\r\n    </form>\r\n  }\r\n  if (error) {\r\n    return (<form>\r\n      <h1>Some Thing went Wrong ðŸ˜’ðŸ˜’ðŸ˜’</h1>\r\n    </form>\r\n    )\r\n  }\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    history.push('/questions')\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* <label htmlFor={'NOQ'}></label> */}\r\n      <ConfigLayout label='category' opts={response.trivia_categories} />\r\n      <ConfigLayout label='level' opts={[{ id: 'Easy', name: 'Easy' }, { id: 'Medium', name: 'Medium' }, { id: 'Hard', name: 'Hard' }]} />\r\n      <ConfigLayout label=\"nOQ\" type={'number'} />\r\n\r\n      <Link to='/questions'><button type='submit'>Begin</button></Link>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ConfigDifficulty\r\n","import './questionsLayout.css'\r\nimport Fetch from '../fetch/fetch'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { handleQuestionUpdate, handleScore } from '../redux/action';\r\nimport { decode } from 'html-entities'\r\nconst QuestionsLayout = () => {\r\n  const {\r\n    category,\r\n    level,\r\n    nOQ,\r\n    score,\r\n    Questions\r\n  } = useSelector(state => state)\r\n\r\n\r\n  let apiUrl = `api.php?amount=${nOQ}`\r\n  if (category) {\r\n    apiUrl = apiUrl.concat(`&category=${category}`)\r\n  }\r\n  if (level) {\r\n    apiUrl = apiUrl.concat(`&difficulty=${level}`)\r\n  }\r\n\r\n  const { response, error, loading } = Fetch({ url: apiUrl })\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [questionindex, setQuestionindex] = useState(0)\r\n  const [answers, setAnswers] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    if (response?.results.length) {\r\n      const question = response.results[questionindex]\r\n      const answers = [...question.incorrect_answers]\r\n\r\n      answers.splice(Math.floor(Math.random() * Math.floor(question.incorrect_answers.length)), 0, question.correct_answer)\r\n      setAnswers(answers)\r\n    }\r\n  }, [response, questionindex])\r\n\r\n  const handleAnswerClick = (ev) => {\r\n    console.log(Questions)\r\n    if (ev.target.textContent === response.results[questionindex].correct_answer) {\r\n      dispatch(handleScore(score + 1))\r\n\r\n      // console.log(response.results[questionindex].correct_answer)\r\n      // console.log('your ans', ev.target.textContent)\r\n    }\r\n    if (ev.target.textContent !== response.results[questionindex].correct_answer) {\r\n      // dispatch(handleQuestionUpdate(([response.results[questionindex].question])))\r\n      // console.log(response.results[questionindex].question)\r\n      // console.log(response.results[questionindex].correct_answer)\r\n      // console.log('your ans', ev.target.textContent)\r\n    }\r\n    if (questionindex + 1 < response.results.length) {\r\n      console.log(questionindex)\r\n      setQuestionindex(questionindex + 1)\r\n\r\n    } else {\r\n      history.push('/result')\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className='questionForm'>\r\n      loading...\r\n    </div>\r\n  }\r\n  if (error) {\r\n    return (<div className='questionForm'>\r\n      <h1>Some Thing went Wrong ðŸ˜’ðŸ˜’ðŸ˜’</h1>\r\n    </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='questionForm'>\r\n      <div className=\"questionScreen\">\r\n        <div className=\"questionNum_scoreBoard\">\r\n          <div> Question : <span className=\"currentQuestion\">{questionindex + 1}</span>/ <span className='leftQuestion'>{response.results.length}</span></div>\r\n          <div>Score : <span className=\"correctAns\">{score}</span>/ <span className='leftQuestion'>{response.results.length}</span></div>\r\n        </div>\r\n        <div className='question'>{decode(response.results[questionindex].question)}</div>\r\n        <div className=\"answerBtns\">\r\n          {answers.map((answer, i) => <button key={i} onClick={handleAnswerClick}>{decode(answer)}</button>)}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"\">\r\n        <button></button>\r\n        <button></button>\r\n\r\n      </div> */}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default QuestionsLayout\r\n","import './resultLayout.css'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { handleCategory, handlenOQ, handleScore } from '../redux/action';\r\n\r\n\r\nconst ResultLayout = () => {\r\n  const {\r\n    level,\r\n    nOQ,\r\n    score\r\n  } = useSelector(state => state)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const handlePlayAgain = () => {\r\n    dispatch(handleScore(0))\r\n    dispatch(handlenOQ(20))\r\n    dispatch(handleCategory(''))\r\n    history.push('/')\r\n  }\r\n  const handlePerformanceReport = () => {\r\n    history.push('/performance')\r\n  }\r\n  return (\r\n    <div className=\"resultWrapper\">\r\n      <h1>Question Complete</h1>\r\n      <h4>Performance Summary:</h4>\r\n      <ul>\r\n        <li>Level : <span>{level.toUpperCase()}</span> </li>\r\n        <li>Total Question : <span>{nOQ}</span></li>\r\n        <li>Total Score : <span>{score}</span></li>\r\n        <li>Percentage score : <span>{((score / nOQ) * 100).toFixed(1) + '%'}</span></li>\r\n      </ul>\r\n      <button onClick={handlePlayAgain}>Play Again</button>\r\n      <button onClick={handlePerformanceReport}>See Full Performance Report</button>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResultLayout\r\n\r\n","import Fetch from '../fetch/fetch'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { handleQuestionUpdate, handleScore } from '../redux/action';\r\nimport { decode } from 'html-entities'\r\nconst Performance = () => {\r\n  const {\r\n    category,\r\n    level,\r\n    nOQ,\r\n    score,\r\n    Questions\r\n  } = useSelector(state => state)\r\n  console.log(Questions)\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Performance\r\n","\nimport './App.css';\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n\n} from \"react-router-dom\"\nimport ConfigDifficulty from './layoutPages/ConfigDifficulty';\nimport QuestionsLayout from './layoutPages/QuestionsLayout';\nimport ResultLayout from './layoutPages/ResultLayout';\nimport Performance from './layoutPages/Performance';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Trivia app</h1>\n\n        <Switch>\n          <Route path='/' exact>\n            <ConfigDifficulty />\n          </Route>\n          <Route path='/questions' >\n            <QuestionsLayout />\n\n          </Route>\n          <Route path='/result'>\n            <ResultLayout />\n          </Route>\n          <Route path='/performance'>\n            <Performance />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import action from './action'\r\n\r\nconst init = {\r\n  category: '',\r\n  level: 'easy',\r\n  nOQ: 20,\r\n  score: 0,\r\n  Questions: [],\r\n\r\n}\r\n\r\nconst reducer = (state = init, action) => {\r\n  if (action.type === 'CHANGE_CATEGORY') {\r\n    return {\r\n      ...state,\r\n      category: action.payload\r\n    }\r\n  }\r\n\r\n  else if (action.type === \"CHANGE_NOQ\") {\r\n    return {\r\n      ...state,\r\n      nOQ: action.payload\r\n    }\r\n  }\r\n  else if (action.type === \"CHANGE_LEVEL\") {\r\n    return {\r\n      ...state,\r\n      level: action.payload\r\n    }\r\n  }\r\n  else if (action.type === \"CHANGE_SCORE\") {\r\n    return {\r\n      ...state,\r\n      score: action.payload\r\n    }\r\n  }\r\n  else if (action.type === \"UPDATE_QUESTIONS\") {\r\n    return {\r\n      ...state,\r\n      Questions: [...state.Questions, ...action.payload]\r\n    }\r\n  }\r\n\r\n  return state\r\n\r\n\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}